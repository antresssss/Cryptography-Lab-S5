import java.util.Scanner;
import java.math.BigInteger;

public class DiffieHellman {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);

        // Get the prime modulus p and base g as public values
        System.out.print("Enter the prime modulus (p): ");
        BigInteger p = s.nextBigInteger();
        System.out.print("Enter the base (g): ");
        BigInteger g = s.nextBigInteger();

        // Private keys for A and B (kept secret)
        System.out.print("Enter the private key of A: ");
        BigInteger prA = s.nextBigInteger();
        System.out.print("Enter the private key of B: ");
        BigInteger prB = s.nextBigInteger();

        // Calculate public values for A and B
        BigInteger pubA = g.modPow(prA, p);
        BigInteger pubB = g.modPow(prB, p);

        // Calculate the shared secret keys
        BigInteger secretKeyA = pubB.modPow(prA, p);
        BigInteger secretKeyB = pubA.modPow(prB, p);

        // Output the shared secret keys
        System.out.println("Secret key generated by A: " + secretKeyA);
        System.out.println("Secret key generated by B: " + secretKeyB);

        // Ensure they are the same
        if (secretKeyA.equals(secretKeyB)) {
            System.out.println("The shared secret key is established successfully!");
        } else {
            System.out.println("Error: The shared secret keys do not match.");
        }

        s.close();
    }
}
